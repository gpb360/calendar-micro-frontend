{
  "version": 3,
  "sources": ["../../../../../node_modules/.pnpm/single-spa-react@6.0.1_@types+react-dom@18.3.0_@types+react@18.3.5_react@18.3.1/node_modules/single-spa-react/node_modules/.pnpm/dom-element-getter-helpers@1.1.1/node_modules/dom-element-getter-helpers/lib/dom-element-getter-helpers.js", "../../../../../node_modules/.pnpm/single-spa-react@6.0.1_@types+react-dom@18.3.0_@types+react@18.3.5_react@18.3.1/node_modules/single-spa-react/src/single-spa-react.js"],
  "sourcesContent": ["function _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nexport function chooseDomElementGetter(opts, props) {\n  var domElementGetter;\n\n  if (props.domElement) {\n    domElementGetter = function domElementGetter() {\n      return props.domElement;\n    };\n  } else if (props.domElementGetter) {\n    domElementGetter = props.domElementGetter;\n  } else if (opts.domElementGetter) {\n    domElementGetter = opts.domElementGetter;\n  } else {\n    domElementGetter = defaultDomElementGetter(props);\n  }\n\n  if (typeof domElementGetter !== \"function\") {\n    throw Error(\"single-spa's dom-element-getter-helpers was given an invalid domElementGetter for application or parcel '\".concat(props.name, \"'. Expected a function, received \").concat(_typeof(domElementGetter)));\n  }\n\n  return function () {\n    var domElement = domElementGetter(props);\n\n    if (!(domElement instanceof HTMLElement)) {\n      throw Error(\"single-spa's dom-element-getter-helpers: domElementGetter returned an invalid dom element for application or parcel '\".concat(props.name, \"'. Expected HTMLElement, received \").concat(_typeof(domElement)));\n    }\n\n    return domElement;\n  };\n}\n\nfunction defaultDomElementGetter(props) {\n  var appName = props.appName || props.name;\n\n  if (!appName) {\n    throw Error(\"single-spa's dom-element-getter-helpers was not given an application name as a prop, so it can't make a unique dom element container for the react application\");\n  }\n\n  var htmlId = \"single-spa-application:\".concat(appName);\n  return function defaultDomEl() {\n    var domElement = document.getElementById(htmlId);\n\n    if (!domElement) {\n      domElement = document.createElement(\"div\");\n      domElement.id = htmlId;\n      document.body.appendChild(domElement);\n    }\n\n    return domElement;\n  };\n}\n", "/* We don't import parcel.component.js from this file intentionally. See comment\n * in that file for why\n */\n\nimport { chooseDomElementGetter } from \"dom-element-getter-helpers\";\n\n// React context that gives any react component the single-spa props\nexport let SingleSpaContext = null;\n\n// This try/catch exists mostly to prevent rollup from thinking that SingleSpaContext\n// is null and then doing optimizations in parcel.js that cause bugs.\n// See https://github.com/single-spa/single-spa-react/issues/105\n\ntry {\n  // single-spa-react is usable as a global script, as a systemjs module, and other\n  // situations where require() is unavailable. This is why we require the user to\n  // pass in opts.React and opts.ReactDOM - to avoid the mess of \"how do i properly load react\".\n  // However, in situations where require() is available, we can use it this way to create\n  // the react context. The try/catch defensiveness keeps single-spa-react working in\n  // as many situations as possible.\n  SingleSpaContext = require(\"react\").createContext();\n} catch {\n  // ignore\n}\n\nconst defaultOpts = {\n  // required opts\n  React: null,\n\n  // required - one or the other\n  ReactDOM: null,\n  ReactDOMClient: null,\n\n  // required - one or the other\n  rootComponent: null,\n  loadRootComponent: null,\n\n  // optional opts\n  errorBoundary: null,\n  errorBoundaryClass: null,\n  domElementGetter: null,\n  parcelCanUpdate: true, // by default, allow parcels created with single-spa-react to be updated\n  suppressComponentDidCatchWarning: false,\n  domElements: {},\n  renderResults: {},\n  updateResolves: {},\n  unmountResolves: {},\n};\n\nfunction singleSpaReact(userOpts) {\n  if (typeof userOpts !== \"object\") {\n    throw new Error(`single-spa-react requires a configuration object`);\n  }\n\n  const opts = {\n    ...defaultOpts,\n    ...userOpts,\n  };\n\n  if (!opts.React) {\n    throw new Error(`single-spa-react must be passed opts.React`);\n  }\n\n  if (!opts.ReactDOM && !opts.ReactDOMClient) {\n    throw new Error(\n      `single-spa-react must be passed opts.ReactDOM or opts.ReactDOMClient`\n    );\n  }\n\n  if (!opts.renderType) {\n    // https://github.com/single-spa/single-spa-react/issues/202\n    if (opts.ReactDOMClient?.createRoot) {\n      opts.renderType = \"createRoot\";\n    } else {\n      opts.renderType = \"render\";\n    }\n  }\n\n  if (!opts.rootComponent && !opts.loadRootComponent) {\n    throw new Error(\n      `single-spa-react must be passed opts.rootComponent or opts.loadRootComponent`\n    );\n  }\n\n  if (opts.errorBoundary && typeof opts.errorBoundary !== \"function\") {\n    throw Error(\n      `The errorBoundary opt for single-spa-react must either be omitted or be a function that returns React elements`\n    );\n  }\n\n  if (!SingleSpaContext && opts.React.createContext) {\n    SingleSpaContext = opts.React.createContext();\n  }\n\n  opts.SingleSpaRoot = createSingleSpaRoot(opts);\n\n  const lifecycles = {\n    bootstrap: bootstrap.bind(null, opts),\n    mount: mount.bind(null, opts),\n    unmount: unmount.bind(null, opts),\n  };\n\n  if (opts.parcelCanUpdate) {\n    lifecycles.update = update.bind(null, opts);\n  }\n\n  return lifecycles;\n}\n\nfunction bootstrap(opts, props) {\n  if (opts.rootComponent) {\n    // This is a class or stateless function component\n    return Promise.resolve();\n  } else {\n    // They passed a promise that resolves with the react component. Wait for it to resolve before mounting\n    return opts.loadRootComponent(props).then((resolvedComponent) => {\n      opts.rootComponent = resolvedComponent;\n    });\n  }\n}\n\nfunction mount(opts, props) {\n  return new Promise((resolve, reject) => {\n    if (\n      !opts.suppressComponentDidCatchWarning &&\n      atLeastReact16(opts.React) &&\n      !opts.errorBoundary &&\n      !opts.errorBoundaryClass\n    ) {\n      if (!opts.rootComponent.prototype) {\n        console.warn(\n          `single-spa-react: ${\n            props.name || props.appName || props.childAppName\n          }'s rootComponent does not implement an error boundary.  If using a functional component, consider providing an opts.errorBoundary to singleSpaReact(opts).`\n        );\n      } else if (!opts.rootComponent.prototype.componentDidCatch) {\n        console.warn(\n          `single-spa-react: ${\n            props.name || props.appName || props.childAppName\n          }'s rootComponent should implement componentDidCatch to avoid accidentally unmounting the entire single-spa application.`\n        );\n      }\n    }\n\n    const whenMounted = function () {\n      resolve(this);\n    };\n\n    const elementToRender = getElementToRender(opts, props, whenMounted);\n    const domElement = chooseDomElementGetter(opts, props)();\n    const renderResult = reactDomRender({\n      elementToRender,\n      domElement,\n      reactDom: getReactDom(opts),\n      renderType: getRenderType(opts),\n    });\n\n    opts.domElements[props.name] = domElement;\n    opts.renderResults[props.name] = renderResult;\n  });\n}\n\nfunction unmount(opts, props) {\n  return new Promise((resolve) => {\n    opts.unmountResolves[props.name] = resolve;\n\n    const root = opts.renderResults[props.name];\n\n    if (root && root.unmount) {\n      // React >= 18\n      const unmountResult = root.unmount();\n    } else {\n      // React < 18\n      getReactDom(opts).unmountComponentAtNode(opts.domElements[props.name]);\n    }\n    delete opts.domElements[props.name];\n    delete opts.renderResults[props.name];\n  });\n}\n\nfunction update(opts, props) {\n  return new Promise((resolve) => {\n    if (!opts.updateResolves[props.name]) {\n      opts.updateResolves[props.name] = [];\n    }\n\n    opts.updateResolves[props.name].push(resolve);\n\n    const elementToRender = getElementToRender(opts, props, null);\n    const renderRoot = opts.renderResults[props.name];\n    if (renderRoot && renderRoot.render) {\n      // React 18 with ReactDOM.createRoot()\n      renderRoot.render(elementToRender);\n    } else {\n      // React 16 / 17 with ReactDOM.render()\n      const domElement = chooseDomElementGetter(opts, props)();\n      // This is the old way to update a react application - just call render() again\n      getReactDom(opts).render(elementToRender, domElement);\n    }\n  });\n}\n\nfunction atLeastReact16(React) {\n  if (\n    React &&\n    typeof React.version === \"string\" &&\n    React.version.indexOf(\".\") >= 0\n  ) {\n    const majorVersionString = React.version.slice(\n      0,\n      React.version.indexOf(\".\")\n    );\n    try {\n      return Number(majorVersionString) >= 16;\n    } catch (err) {\n      return false;\n    }\n  } else {\n    return false;\n  }\n}\n\nfunction getReactDom(opts) {\n  return opts.ReactDOMClient || opts.ReactDOM;\n}\n\nfunction getRenderType(opts) {\n  return typeof opts.renderType === \"function\"\n    ? opts.renderType()\n    : opts.renderType;\n}\n\nfunction reactDomRender({ reactDom, renderType, elementToRender, domElement }) {\n  const renderFn = reactDom[renderType];\n  if (typeof renderFn !== \"function\")\n    throw new Error(`renderType \"${renderType}\" did not return a function.`);\n\n  switch (renderType) {\n    case \"createRoot\":\n    case \"unstable_createRoot\":\n    case \"createBlockingRoot\":\n    case \"unstable_createBlockingRoot\": {\n      const root = renderFn(domElement);\n      root.render(elementToRender);\n      return root;\n    }\n    case \"hydrateRoot\": {\n      const root = renderFn(domElement, elementToRender);\n      return root;\n    }\n    case \"hydrate\":\n    default: {\n      renderFn(elementToRender, domElement);\n      // The renderRoot function should return a react root, but ReactDOM.hydrate() and ReactDOM.render()\n      // do not return a react root. So instead, we return null which indicates that there is no react root\n      // that can be used for updates or unmounting\n      return null;\n    }\n  }\n}\n\nfunction getElementToRender(opts, props, mountFinished) {\n  const rootComponentElement = opts.React.createElement(\n    opts.rootComponent,\n    props\n  );\n\n  let elementToRender = SingleSpaContext\n    ? opts.React.createElement(\n        SingleSpaContext.Provider,\n        { value: props },\n        rootComponentElement\n      )\n    : rootComponentElement;\n\n  if (\n    opts.errorBoundary ||\n    props.errorBoundary ||\n    opts.errorBoundaryClass ||\n    props.errorBoundaryClass\n  ) {\n    opts.errorBoundaryClass =\n      opts.errorBoundaryClass ||\n      props.errorBoundaryClass ||\n      createErrorBoundary(opts, props);\n    elementToRender = opts.React.createElement(\n      opts.errorBoundaryClass,\n      props,\n      elementToRender\n    );\n  }\n\n  // https://github.com/single-spa/single-spa-react/issues/112\n  elementToRender = opts.React.createElement(\n    opts.SingleSpaRoot,\n    {\n      ...props,\n      mountFinished,\n      updateFinished() {\n        if (opts.updateResolves[props.name]) {\n          opts.updateResolves[props.name].forEach((r) => r());\n          delete opts.updateResolves[props.name];\n        }\n      },\n      unmountFinished() {\n        if (opts.unmountResolves[props.name]) {\n          opts.unmountResolves[props.name]();\n          delete opts.unmountResolves[props.name];\n        }\n      },\n    },\n    elementToRender\n  );\n\n  return elementToRender;\n}\n\nfunction createErrorBoundary(opts, props) {\n  // Avoiding babel output for class syntax and super()\n  // to avoid bloat\n  function SingleSpaReactErrorBoundary(props) {\n    // super\n    opts.React.Component.apply(this, arguments);\n\n    this.state = {\n      caughtError: null,\n      caughtErrorInfo: null,\n    };\n\n    SingleSpaReactErrorBoundary.displayName = `SingleSpaReactErrorBoundary(${props.name})`;\n  }\n\n  SingleSpaReactErrorBoundary.prototype = Object.create(\n    opts.React.Component.prototype\n  );\n\n  SingleSpaReactErrorBoundary.prototype.render = function () {\n    if (this.state.caughtError) {\n      const errorBoundary = opts.errorBoundary || props.errorBoundary;\n\n      return errorBoundary(\n        this.state.caughtError,\n        this.state.caughtErrorInfo,\n        this.props\n      );\n    } else {\n      return this.props.children;\n    }\n  };\n\n  SingleSpaReactErrorBoundary.prototype.componentDidCatch = function (\n    err,\n    info\n  ) {\n    this.setState({\n      caughtError: err,\n      caughtErrorInfo: info,\n    });\n  };\n\n  return SingleSpaReactErrorBoundary;\n}\n\nfunction createSingleSpaRoot(opts) {\n  // This is a class component, since we need a mount hook and single-spa-react supports React@15 (no useEffect available)\n  function SingleSpaRoot(_props) {\n    SingleSpaRoot.displayName = `SingleSpaRoot(${_props.name})`;\n  }\n\n  SingleSpaRoot.prototype = Object.create(opts.React.Component.prototype);\n  SingleSpaRoot.prototype.componentDidMount = function () {\n    setTimeout(this.props.mountFinished);\n  };\n  SingleSpaRoot.prototype.componentWillUnmount = function () {\n    setTimeout(this.props.unmountFinished);\n  };\n  SingleSpaRoot.prototype.render = function () {\n    // componentDidUpdate doesn't seem to be called during root.render() for updates\n    setTimeout(this.props.updateFinished);\n\n    return this.props.children;\n  };\n\n  return SingleSpaRoot;\n}\n\nexport default singleSpaReact;\n"],
  "mappings": "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",
  "names": ["_typeof", "obj", "Symbol", "iterator", "constructor", "prototype", "chooseDomElementGetter", "opts", "props", "domElementGetter", "domElement", "appName", "name", "Error", "htmlId", "concat", "document", "getElementById", "createElement", "id", "body", "appendChild", "HTMLElement", "SingleSpaContext", "require", "createContext", "e", "defaultOpts", "React", "ReactDOM", "ReactDOMClient", "rootComponent", "loadRootComponent", "errorBoundary", "errorBoundaryClass", "parcelCanUpdate", "suppressComponentDidCatchWarning", "domElements", "renderResults", "updateResolves", "unmountResolves", "singleSpaReact", "userOpts", "renderType", "_opts$ReactDOMClient", "createRoot", "SingleSpaRoot", "_props", "displayName", "Object", "create", "Component", "componentDidMount", "setTimeout", "this", "mountFinished", "componentWillUnmount", "unmountFinished", "render", "updateFinished", "children", "lifecycles", "bootstrap", "bind", "mount", "unmount", "update", "Promise", "resolve", "then", "resolvedComponent", "reject", "version", "indexOf", "majorVersionString", "slice", "Number", "err", "componentDidCatch", "console", "warn", "childAppName", "elementToRender", "getElementToRender", "renderResult", "reactDom", "renderFn", "root", "getReactDom", "getRenderType", "unmountComponentAtNode", "push", "renderRoot", "rootComponentElement", "Provider", "value", "SingleSpaReactErrorBoundary", "apply", "arguments", "state", "caughtError", "caughtErrorInfo", "info", "setState", "forEach", "r"]
}
