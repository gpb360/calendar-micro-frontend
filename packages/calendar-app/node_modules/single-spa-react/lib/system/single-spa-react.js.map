{"version":3,"file":"single-spa-react.js","sources":["../../node_modules/.pnpm/dom-element-getter-helpers@1.1.1/node_modules/dom-element-getter-helpers/lib/dom-element-getter-helpers.js","../../src/single-spa-react.js"],"sourcesContent":["function _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nexport function chooseDomElementGetter(opts, props) {\n  var domElementGetter;\n\n  if (props.domElement) {\n    domElementGetter = function domElementGetter() {\n      return props.domElement;\n    };\n  } else if (props.domElementGetter) {\n    domElementGetter = props.domElementGetter;\n  } else if (opts.domElementGetter) {\n    domElementGetter = opts.domElementGetter;\n  } else {\n    domElementGetter = defaultDomElementGetter(props);\n  }\n\n  if (typeof domElementGetter !== \"function\") {\n    throw Error(\"single-spa's dom-element-getter-helpers was given an invalid domElementGetter for application or parcel '\".concat(props.name, \"'. Expected a function, received \").concat(_typeof(domElementGetter)));\n  }\n\n  return function () {\n    var domElement = domElementGetter(props);\n\n    if (!(domElement instanceof HTMLElement)) {\n      throw Error(\"single-spa's dom-element-getter-helpers: domElementGetter returned an invalid dom element for application or parcel '\".concat(props.name, \"'. Expected HTMLElement, received \").concat(_typeof(domElement)));\n    }\n\n    return domElement;\n  };\n}\n\nfunction defaultDomElementGetter(props) {\n  var appName = props.appName || props.name;\n\n  if (!appName) {\n    throw Error(\"single-spa's dom-element-getter-helpers was not given an application name as a prop, so it can't make a unique dom element container for the react application\");\n  }\n\n  var htmlId = \"single-spa-application:\".concat(appName);\n  return function defaultDomEl() {\n    var domElement = document.getElementById(htmlId);\n\n    if (!domElement) {\n      domElement = document.createElement(\"div\");\n      domElement.id = htmlId;\n      document.body.appendChild(domElement);\n    }\n\n    return domElement;\n  };\n}\n","/* We don't import parcel.component.js from this file intentionally. See comment\n * in that file for why\n */\n\nimport { chooseDomElementGetter } from \"dom-element-getter-helpers\";\n\n// React context that gives any react component the single-spa props\nexport let SingleSpaContext = null;\n\n// This try/catch exists mostly to prevent rollup from thinking that SingleSpaContext\n// is null and then doing optimizations in parcel.js that cause bugs.\n// See https://github.com/single-spa/single-spa-react/issues/105\n\ntry {\n  // single-spa-react is usable as a global script, as a systemjs module, and other\n  // situations where require() is unavailable. This is why we require the user to\n  // pass in opts.React and opts.ReactDOM - to avoid the mess of \"how do i properly load react\".\n  // However, in situations where require() is available, we can use it this way to create\n  // the react context. The try/catch defensiveness keeps single-spa-react working in\n  // as many situations as possible.\n  SingleSpaContext = require(\"react\").createContext();\n} catch {\n  // ignore\n}\n\nconst defaultOpts = {\n  // required opts\n  React: null,\n\n  // required - one or the other\n  ReactDOM: null,\n  ReactDOMClient: null,\n\n  // required - one or the other\n  rootComponent: null,\n  loadRootComponent: null,\n\n  // optional opts\n  errorBoundary: null,\n  errorBoundaryClass: null,\n  domElementGetter: null,\n  parcelCanUpdate: true, // by default, allow parcels created with single-spa-react to be updated\n  suppressComponentDidCatchWarning: false,\n  domElements: {},\n  renderResults: {},\n  updateResolves: {},\n  unmountResolves: {},\n};\n\nfunction singleSpaReact(userOpts) {\n  if (typeof userOpts !== \"object\") {\n    throw new Error(`single-spa-react requires a configuration object`);\n  }\n\n  const opts = {\n    ...defaultOpts,\n    ...userOpts,\n  };\n\n  if (!opts.React) {\n    throw new Error(`single-spa-react must be passed opts.React`);\n  }\n\n  if (!opts.ReactDOM && !opts.ReactDOMClient) {\n    throw new Error(\n      `single-spa-react must be passed opts.ReactDOM or opts.ReactDOMClient`\n    );\n  }\n\n  if (!opts.renderType) {\n    // https://github.com/single-spa/single-spa-react/issues/202\n    if (opts.ReactDOMClient?.createRoot) {\n      opts.renderType = \"createRoot\";\n    } else {\n      opts.renderType = \"render\";\n    }\n  }\n\n  if (!opts.rootComponent && !opts.loadRootComponent) {\n    throw new Error(\n      `single-spa-react must be passed opts.rootComponent or opts.loadRootComponent`\n    );\n  }\n\n  if (opts.errorBoundary && typeof opts.errorBoundary !== \"function\") {\n    throw Error(\n      `The errorBoundary opt for single-spa-react must either be omitted or be a function that returns React elements`\n    );\n  }\n\n  if (!SingleSpaContext && opts.React.createContext) {\n    SingleSpaContext = opts.React.createContext();\n  }\n\n  opts.SingleSpaRoot = createSingleSpaRoot(opts);\n\n  const lifecycles = {\n    bootstrap: bootstrap.bind(null, opts),\n    mount: mount.bind(null, opts),\n    unmount: unmount.bind(null, opts),\n  };\n\n  if (opts.parcelCanUpdate) {\n    lifecycles.update = update.bind(null, opts);\n  }\n\n  return lifecycles;\n}\n\nfunction bootstrap(opts, props) {\n  if (opts.rootComponent) {\n    // This is a class or stateless function component\n    return Promise.resolve();\n  } else {\n    // They passed a promise that resolves with the react component. Wait for it to resolve before mounting\n    return opts.loadRootComponent(props).then((resolvedComponent) => {\n      opts.rootComponent = resolvedComponent;\n    });\n  }\n}\n\nfunction mount(opts, props) {\n  return new Promise((resolve, reject) => {\n    if (\n      !opts.suppressComponentDidCatchWarning &&\n      atLeastReact16(opts.React) &&\n      !opts.errorBoundary &&\n      !opts.errorBoundaryClass\n    ) {\n      if (!opts.rootComponent.prototype) {\n        console.warn(\n          `single-spa-react: ${\n            props.name || props.appName || props.childAppName\n          }'s rootComponent does not implement an error boundary.  If using a functional component, consider providing an opts.errorBoundary to singleSpaReact(opts).`\n        );\n      } else if (!opts.rootComponent.prototype.componentDidCatch) {\n        console.warn(\n          `single-spa-react: ${\n            props.name || props.appName || props.childAppName\n          }'s rootComponent should implement componentDidCatch to avoid accidentally unmounting the entire single-spa application.`\n        );\n      }\n    }\n\n    const whenMounted = function () {\n      resolve(this);\n    };\n\n    const elementToRender = getElementToRender(opts, props, whenMounted);\n    const domElement = chooseDomElementGetter(opts, props)();\n    const renderResult = reactDomRender({\n      elementToRender,\n      domElement,\n      reactDom: getReactDom(opts),\n      renderType: getRenderType(opts),\n    });\n\n    opts.domElements[props.name] = domElement;\n    opts.renderResults[props.name] = renderResult;\n  });\n}\n\nfunction unmount(opts, props) {\n  return new Promise((resolve) => {\n    opts.unmountResolves[props.name] = resolve;\n\n    const root = opts.renderResults[props.name];\n\n    if (root && root.unmount) {\n      // React >= 18\n      const unmountResult = root.unmount();\n    } else {\n      // React < 18\n      getReactDom(opts).unmountComponentAtNode(opts.domElements[props.name]);\n    }\n    delete opts.domElements[props.name];\n    delete opts.renderResults[props.name];\n  });\n}\n\nfunction update(opts, props) {\n  return new Promise((resolve) => {\n    if (!opts.updateResolves[props.name]) {\n      opts.updateResolves[props.name] = [];\n    }\n\n    opts.updateResolves[props.name].push(resolve);\n\n    const elementToRender = getElementToRender(opts, props, null);\n    const renderRoot = opts.renderResults[props.name];\n    if (renderRoot && renderRoot.render) {\n      // React 18 with ReactDOM.createRoot()\n      renderRoot.render(elementToRender);\n    } else {\n      // React 16 / 17 with ReactDOM.render()\n      const domElement = chooseDomElementGetter(opts, props)();\n      // This is the old way to update a react application - just call render() again\n      getReactDom(opts).render(elementToRender, domElement);\n    }\n  });\n}\n\nfunction atLeastReact16(React) {\n  if (\n    React &&\n    typeof React.version === \"string\" &&\n    React.version.indexOf(\".\") >= 0\n  ) {\n    const majorVersionString = React.version.slice(\n      0,\n      React.version.indexOf(\".\")\n    );\n    try {\n      return Number(majorVersionString) >= 16;\n    } catch (err) {\n      return false;\n    }\n  } else {\n    return false;\n  }\n}\n\nfunction getReactDom(opts) {\n  return opts.ReactDOMClient || opts.ReactDOM;\n}\n\nfunction getRenderType(opts) {\n  return typeof opts.renderType === \"function\"\n    ? opts.renderType()\n    : opts.renderType;\n}\n\nfunction reactDomRender({ reactDom, renderType, elementToRender, domElement }) {\n  const renderFn = reactDom[renderType];\n  if (typeof renderFn !== \"function\")\n    throw new Error(`renderType \"${renderType}\" did not return a function.`);\n\n  switch (renderType) {\n    case \"createRoot\":\n    case \"unstable_createRoot\":\n    case \"createBlockingRoot\":\n    case \"unstable_createBlockingRoot\": {\n      const root = renderFn(domElement);\n      root.render(elementToRender);\n      return root;\n    }\n    case \"hydrateRoot\": {\n      const root = renderFn(domElement, elementToRender);\n      return root;\n    }\n    case \"hydrate\":\n    default: {\n      renderFn(elementToRender, domElement);\n      // The renderRoot function should return a react root, but ReactDOM.hydrate() and ReactDOM.render()\n      // do not return a react root. So instead, we return null which indicates that there is no react root\n      // that can be used for updates or unmounting\n      return null;\n    }\n  }\n}\n\nfunction getElementToRender(opts, props, mountFinished) {\n  const rootComponentElement = opts.React.createElement(\n    opts.rootComponent,\n    props\n  );\n\n  let elementToRender = SingleSpaContext\n    ? opts.React.createElement(\n        SingleSpaContext.Provider,\n        { value: props },\n        rootComponentElement\n      )\n    : rootComponentElement;\n\n  if (\n    opts.errorBoundary ||\n    props.errorBoundary ||\n    opts.errorBoundaryClass ||\n    props.errorBoundaryClass\n  ) {\n    opts.errorBoundaryClass =\n      opts.errorBoundaryClass ||\n      props.errorBoundaryClass ||\n      createErrorBoundary(opts, props);\n    elementToRender = opts.React.createElement(\n      opts.errorBoundaryClass,\n      props,\n      elementToRender\n    );\n  }\n\n  // https://github.com/single-spa/single-spa-react/issues/112\n  elementToRender = opts.React.createElement(\n    opts.SingleSpaRoot,\n    {\n      ...props,\n      mountFinished,\n      updateFinished() {\n        if (opts.updateResolves[props.name]) {\n          opts.updateResolves[props.name].forEach((r) => r());\n          delete opts.updateResolves[props.name];\n        }\n      },\n      unmountFinished() {\n        if (opts.unmountResolves[props.name]) {\n          opts.unmountResolves[props.name]();\n          delete opts.unmountResolves[props.name];\n        }\n      },\n    },\n    elementToRender\n  );\n\n  return elementToRender;\n}\n\nfunction createErrorBoundary(opts, props) {\n  // Avoiding babel output for class syntax and super()\n  // to avoid bloat\n  function SingleSpaReactErrorBoundary(props) {\n    // super\n    opts.React.Component.apply(this, arguments);\n\n    this.state = {\n      caughtError: null,\n      caughtErrorInfo: null,\n    };\n\n    SingleSpaReactErrorBoundary.displayName = `SingleSpaReactErrorBoundary(${props.name})`;\n  }\n\n  SingleSpaReactErrorBoundary.prototype = Object.create(\n    opts.React.Component.prototype\n  );\n\n  SingleSpaReactErrorBoundary.prototype.render = function () {\n    if (this.state.caughtError) {\n      const errorBoundary = opts.errorBoundary || props.errorBoundary;\n\n      return errorBoundary(\n        this.state.caughtError,\n        this.state.caughtErrorInfo,\n        this.props\n      );\n    } else {\n      return this.props.children;\n    }\n  };\n\n  SingleSpaReactErrorBoundary.prototype.componentDidCatch = function (\n    err,\n    info\n  ) {\n    this.setState({\n      caughtError: err,\n      caughtErrorInfo: info,\n    });\n  };\n\n  return SingleSpaReactErrorBoundary;\n}\n\nfunction createSingleSpaRoot(opts) {\n  // This is a class component, since we need a mount hook and single-spa-react supports React@15 (no useEffect available)\n  function SingleSpaRoot(_props) {\n    SingleSpaRoot.displayName = `SingleSpaRoot(${_props.name})`;\n  }\n\n  SingleSpaRoot.prototype = Object.create(opts.React.Component.prototype);\n  SingleSpaRoot.prototype.componentDidMount = function () {\n    setTimeout(this.props.mountFinished);\n  };\n  SingleSpaRoot.prototype.componentWillUnmount = function () {\n    setTimeout(this.props.unmountFinished);\n  };\n  SingleSpaRoot.prototype.render = function () {\n    // componentDidUpdate doesn't seem to be called during root.render() for updates\n    setTimeout(this.props.updateFinished);\n\n    return this.props.children;\n  };\n\n  return SingleSpaRoot;\n}\n\nexport default singleSpaReact;\n"],"names":["_typeof","obj","Symbol","iterator","constructor","prototype","chooseDomElementGetter","opts","props","domElementGetter","domElement","appName","name","Error","htmlId","concat","document","getElementById","createElement","id","body","appendChild","defaultDomElementGetter","HTMLElement","userOpts","defaultOpts","React","ReactDOM","ReactDOMClient","renderType","_opts$ReactDOMClient","createRoot","rootComponent","loadRootComponent","errorBoundary","SingleSpaContext","createContext","SingleSpaRoot","_props","displayName","Object","create","Component","componentDidMount","setTimeout","this","mountFinished","componentWillUnmount","unmountFinished","render","updateFinished","children","createSingleSpaRoot","lifecycles","bootstrap","bind","mount","unmount","parcelCanUpdate","update","require","errorBoundaryClass","suppressComponentDidCatchWarning","domElements","renderResults","updateResolves","unmountResolves","Promise","resolve","then","resolvedComponent","reject","version","indexOf","majorVersionString","slice","Number","err","atLeastReact16","componentDidCatch","console","warn","childAppName","elementToRender","getElementToRender","renderResult","reactDom","renderFn","root","reactDomRender","getReactDom","getRenderType","unmountComponentAtNode","push","renderRoot","rootComponentElement","Provider","value","SingleSpaReactErrorBoundary","apply","arguments","state","caughtError","caughtErrorInfo","info","setState","createErrorBoundary","forEach","r"],"mappings":"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"}